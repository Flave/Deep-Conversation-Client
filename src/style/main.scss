@import './normalize.scss';

//$base-font: 'Inconsolata', 'Times', serif; //'VT323' 'OCR A Std' 'mono-space';
$base-font: 'Share Tech Mono', monospace;
$base-font-size: 24px;

$c-background: #222;
$c-text: #fff;
$c-accent: #fdcc18; //#186aff;
$c-message-bg: #808080;
$c-message-text: $c-background;
$c-info-bg: #ddd;
$c-info-text: $c-background;
$c-intro-bg: #5f5f5f;
$c-intro-text: $c-background;
$c-cta: #444;
$c-cta-text: #444;

$body-padding: 1.5vh 3.5vw;
$d-inputs-height: 60px;

$breakpoints: (
  'mini':  450px,
  'small':  767px,
  'medium': 992px,
  'large':  1200px
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

* {
  box-sizing: border-box;
}


body {
  background: $c-background;
  color: $c-text;
  font-family: $base-font;
  font-size: $base-font-size;
  line-height: 1.33em;
  letter-spacing: -.02em;

  @include respond-to('medium') {
    font-size: 22px;
  }

  @include respond-to('small') {
    font-size: 20px;
  }
}

a {
  color: $c-accent;
}

@import "./btn.scss";
@import "./intro.scss";
@import "./inputs.scss";
@import "./conversations.scss";
@import "./header.scss";
@import "./info.scss";